name: build

on: ["push"]

jobs:
  build:
    runs-on: ubuntu-18.04
    env:
      PACKER_VERSION: "1.7.0"
      VAGRANT_VERSION: "2.2.14"

    steps:
    - uses: actions/checkout@v2

    - name: Install packer
      run: |
        set -euo pipefail
        set -x

        PACKER_URL="https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip"
        wget $PACKER_URL
        unzip packer_${PACKER_VERSION}_linux_amd64.zip
        sudo mv packer /usr/local/bin

        packer --version

    - name: Install vagrant
      run: |
        set -euo pipefail
        set -x

        VAGRANT_URL="https://releases.hashicorp.com/vagrant/${VAGRANT_VERSION}/vagrant_${VAGRANT_VERSION}_x86_64.deb"
        dir=`mktemp -d tmp-downloaded-vagrant-deb-XXXXX`
        curl -L "${VAGRANT_URL}" > $dir/vagrant.deb;
        sudo apt install $PWD/$dir/vagrant.deb;

    - name: run build
      run: |
        set -euo pipefail
        set -x

        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          pv \
          qemu-kvm \
          qemu-utils
    #    make packer-build

    - name: run build
      run: |
        set -euo pipefail
        set -x

        wget 'https://github.com/phlummox/vagrant-in-vagrant/releases/download/v0.2.x/vagrant.d.tgz'
        mkdir output
        (cd output; wget 'https://github.com/phlummox/vagrant-in-vagrant/releases/download/v0.2.x/vagrant_in_vagrant_0.0.1.box')

    - name: test
      run: |
        set -euo pipefail
        set -x

        sudo apt install -y --no-install-recommends \
            libvirt-bin \
            libvirt-dev
        tar xf vagrant.d.tgz -C ~
        sudo systemctl start libvirtd
        sudo systemctl status libvirtd
        sudo adduser $USER libvirt
        sudo adduser $USER kvm
        newgrp libvirt

        ./test-vm.sh

    - name: Extract start of changelog
      run: |
        set -euo pipefail
        set -x

        ./topmost-changelog-sec.sh > release-notes.md

    - name:  Set the release name
      run: |
        set -x

        echo github ref is "${{ github.ref }}"

        #echo "release_name=${{ github.ref }}" | sed 's/\<v//' >> $GITHUB_ENV

    #- name:  Show the release name
    #  run: |
    #    set -x

    #    #echo release name is "${{ release_name }}"
    #    cat $GITHUB_ENV


    - name: Release (if tagged)
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          output/*
          vagrant.d.tgz
        body_path: release-notes.md
        draft: true
        # name: ${{ release_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Push to vagrant cloud (if tagged)
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        set -euo pipefail
        set -x

        ./publish.sh
      env:
        VAGRANT_CLOUD_TOKEN: ${{ secrets.VAGRANT_CLOUD_TOKEN }}

# vim: ts=2 sw=2 et :
